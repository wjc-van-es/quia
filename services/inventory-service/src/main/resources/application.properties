quarkus.http.port=8083

# §11.1.1 to include access to http://localhost:8083/graphql-ui in prod mode as well
quarkus.smallrye-graphql.ui.always-include=true

## docker image build
quarkus.container-image.builder=openshift
quarkus.container-image.registry=quay.io
quarkus.container-image.group=wjc.van.es
quarkus.container-image.tag=1.0.0

## k8s
#quarkus.kubernetes.namespace=default
#quarkus.kubernetes.env.vars.quarkus-datasource-jdbc-url=jdbc:mysql://mysql:3306/inventory
#quarkus.kubernetes.prometheus.generate-service-monitor=false

## openshift
quarkus.openshift.namespace=wjc-van-es-dev
quarkus.openshift.env.vars.quarkus-datasource-jdbc-url=jdbc:mysql://mysql:3306/inventory
quarkus.openshift.prometheus.generate-service-monitor=false
# Expose created service to the world
quarkus.openshift.route.expose=true

## DB access
quarkus.datasource.db-kind=mysql
quarkus.datasource.username=user
quarkus.datasource.password=pass

# defining the connection url explicitly only in prod mode will allow automatic configured dev service
%prod.quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/inventory

# drop and create the database at startup
quarkus.hibernate-orm.database.generation = drop-and-create

# §11.1.1 to enable it for prod mode as well (using %prod. here would disable it in dev mode)
quarkus.hibernate-orm.sql-load-script=import.sql